WHAT?
Continuous integration: Frequent merging of several small changes into a main branch.
Continuous delivery: When teams produce software in short cycles with high speed and frequency so that reliable software can be released at any time, and with a simple and repeatable deployment process when 
                     deciding to deploy.

WHY?
CI/CD bridges the gaps between development and operation activities and teams by enforcing automation in building, testing and deployment of applications. CI/CD services compile the incremental code changes 
made by developers, then link and package them into software deliverables. Automated tests verify the software functionality, and automated deployment services deliver them to end users. 
The aim is to increase early defect discovery, increase productivity, and provide faster release cycles. The process contrasts with traditional methods where a collection of software updates were integrated 
into one large batch before deploying the newer version. Modern-day DevOps practices involve:
continuous development,
continuous testing,
continuous integration,
continuous deployment, and
continuous monitoring
of software applications throughout its development life cycle. The CI/CD practice, or CI/CD pipeline, forms the backbone of modern day DevOps operations.

HOW?
[how part] (https://chat.openai.com/share/9b415e06-31af-4f17-905a-f3cec19682ae)
